// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2005
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.3.3

///
/// @author	Mateusz Ko³odziejczyk
/// @date	06.01.2009
///
/// @brief	Klasa wygenerowana z pliku IDL IClientClient.idl
///

#ifndef ___IClientClient_skel_h__
#define ___IClientClient_skel_h__

#include <IClientClient.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4030300L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:IClientClient:1.0
//
class POA_IClientClient : virtual public PortableServer::ServantBase
{
    POA_IClientClient(const POA_IClientClient&);
    void operator=(const POA_IClientClient&);

protected:

    //
    // IDL:IClientClient/SendFile:1.0
    //
    void _OB_op_SendFile(OB::Upcall_ptr);

    //
    // IDL:IClientClient/CreatePipe:1.0
    //
    void _OB_op_CreatePipe(OB::Upcall_ptr);

    //
    // IDL:IClientClient/GetFile:1.0
    //
    void _OB_op_GetFile(OB::Upcall_ptr);

public:

    POA_IClientClient() { }

    virtual ::CORBA::Boolean _is_a(const char*)
        throw(::CORBA::SystemException);

    virtual ::CORBA::RepositoryId _primary_interface(
        const PortableServer::ObjectId&,
        PortableServer::POA_ptr);

    IClientClient_ptr _this();

    virtual OB::DirectStubImpl_ptr _OB_createDirectStubImpl(
        PortableServer::POA_ptr,
        const PortableServer::ObjectId&);
    virtual void _OB_dispatch(OB::Upcall_ptr);

    //
    // IDL:IClientClient/SendFile:1.0
    //
    virtual void SendFile(const ::DomainData::File& f,
                          const ::DomainData::User& receiver)
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:IClientClient/CreatePipe:1.0
    //
    virtual void CreatePipe(const ::DomainData::User& receiver)
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:IClientClient/GetFile:1.0
    //
    virtual ::DomainData::File* GetFile(const ::DomainData::User& sender)
        throw(::CORBA::SystemException) = 0;
};

//
// IDL:IClientClient:1.0
//
class OBDirectStubImpl_IClientClient : virtual public OBStubImpl_IClientClient,
                                       virtual public OB::DirectStubImpl
{
    OBDirectStubImpl_IClientClient(const OBDirectStubImpl_IClientClient&);
    void operator=(const OBDirectStubImpl_IClientClient&);

protected:

#ifdef HAVE_VCPLUSPLUS_BUGS

    OBDirectStubImpl_IClientClient() { }

#endif

    OBDirectStubImpl_IClientClient(PortableServer::POA_ptr,
                                   const PortableServer::ObjectId&,
                                   PortableServer::ServantBase*);

    friend class POA_IClientClient;

public:

    //
    // IDL:IClientClient/SendFile:1.0
    //
    virtual void SendFile(const ::DomainData::File& f,
                          const ::DomainData::User& receiver);

    //
    // IDL:IClientClient/CreatePipe:1.0
    //
    virtual void CreatePipe(const ::DomainData::User& receiver);

    //
    // IDL:IClientClient/GetFile:1.0
    //
    virtual ::DomainData::File* GetFile(const ::DomainData::User& sender);
};

#endif
